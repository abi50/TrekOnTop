// import React, { useState, useEffect, } from 'react';
// import axios from 'axios';
// import { useDispatch, useSelector } from 'react-redux';
// import { RootState } from '../reduxs/store';
// import {
//   clearForm,
//   setLatitudeLongitude,
//   setPlaceName,
//   setCityName,
//   setCountryName,
//   setTitle,
//   setDescription,
//   setCategoryId,
//   addFile
// } from '../reduxs/recommendationFormSlice';
// import { useNavigate } from 'react-router-dom';

// import { GoogleMap, MarkerF, useJsApiLoader } from '@react-google-maps/api';
// import GooglePlacesAutocomplete from 'react-google-places-autocomplete';
// import { debounce } from 'lodash';

// const AddRecommendation = () => {
//   const dispatch = useDispatch();
//   const navigate = useNavigate();
//   const form = useSelector((state: RootState) => state.recommendation);
//   const user = useSelector((state: RootState) => state.user);
//   const token = localStorage.getItem('token');
//   const [selectedPlace, setSelectedPlace] = useState<{ value: { place_id: string }; label: string } | null>(null);
//   const [categories, setCategories] = useState<CategoryDto[]>([]);
//   const [map, setMap] = useState<google.maps.Map | null>(null);
//   const [searchValue, setSearchValue] = useState(null);

//   const debouncedSetSearchValue = debounce(setSearchValue, 500); // עיכוב של 500ms

//   // הגדרות Google Maps
//   const { isLoaded, loadError } = useJsApiLoader({
//     id: 'google-map-script',
//     googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',
//     libraries: ["places"]
//   });


//   useEffect(() => {
//     if (!token) {
//       navigate('/register');
//     }
//   }, [token, navigate]);

//   useEffect(() => {
//     axios.get("https://localhost:7083/api/Category")
//       .then(response => setCategories(response.data))
//       .catch(error => console.error("Error fetching categories:", error));
//   }, []);

//   console.log('Categories:', categories);

//   const handlePlaceSelect = (value: any) => {
//     dispatch(setPlaceName(value.label));

//     const placeId = value.value.place_id;

//     // יצירת service של Places API
//     if (!map) {
//       console.error("Map instance is not available.");
//       return;
//     }
//     const service = new window.google.maps.places.PlacesService(map);
//     const request = {
//       placeId: placeId,
//       fields: ['name', 'geometry', 'address_components'],
//     };

//     // שליפת פרטי המקום מ-Google Places API
//     service.getDetails(request, (place, status) => {
//       if (status === window.google.maps.places.PlacesServiceStatus.OK && place) {
//         const latitude = place.geometry?.location?.lat() ?? 0;
//         const longitude = place.geometry?.location?.lng() ?? 0;

//         // חילוץ העיר והמדינה מכתובת המקום
//         const addressComponents = place.address_components;
//         const cityComponent = addressComponents?.find(component => component.types.includes('locality'));
//         const countryComponent = addressComponents?.find(component => component.types.includes('country')) ?? null;

//         const cityName = cityComponent ? cityComponent.long_name : '';
//         const countryName = countryComponent ? countryComponent.long_name : '';

//         // עדכון Redux עם הנתונים החיוניים
//         dispatch(setLatitudeLongitude({ latitude, longitude }));
//         dispatch(setCityName(cityName));
//         dispatch(setCountryName(countryName));

//         // יצירת אובייקט PlaceDto לשימוש בהמשך
//         const placeDto = {
//           PlaceId: 0, // 0 כי נבדוק אם קיים ונייצר ID אם צריך
//           PlaceName: place.name,
//           CategoryId: null, // ייקבע מאוחר יותר
//           CityId: null, // ייקבע אחרי בדיקת העיר
//           Latitude: latitude,
//           Longitude: longitude
//         };

//         console.log("Place DTO: ", placeDto);
//         console.log("City: ", cityName);
//         console.log("Country: ", countryName);

//         // כאן בהמשך תוכל לבדוק אם המקום, העיר והמדינה קיימים במסד הנתונים
//       } else {
//         console.error("Error retrieving place details:", status);
//       }
//     });
//   };


//   const handleMapClick = (e: google.maps.MapMouseEvent) => {
//     if (e.latLng) {
//       dispatch(setLatitudeLongitude({ latitude: e.latLng.lat(), longitude: e.latLng.lng() }));
//     }
//   };


// const checkIfPlaceExists = async (latitude: number, longitude: number) => {
//     try {
//         const response = await axios.get(`https://localhost:7083/api/Place/checkIfPlaceExists`, {
//             params: { lat: latitude, lng: longitude }
//         });

//         return { placeId: response.data }; // מחזיר את מזהה המקום אם נמצא

//     } catch (error) {
//         if (axios.isAxiosError(error) && error.response && error.response.status === 404) {
//             return null; // מקום לא נמצא במסד הנתונים
//         }
//         console.error("Error checking if place exists:", error);
//         return null; // במקרה של שגיאה אחרת
//     }
// };


// const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
//   e.preventDefault();
//   if (!token) {
//       navigate('/register');
//       return;
//   }

//   try {
//       // 1️⃣ בדיקת קיום המקום במסד הנתונים
//       let placeId: number | null = null;
//       const placeExists = await checkIfPlaceExists(form.latitude ?? 0, form.longitude ?? 0);
//       if (placeExists) {
//           console.log(placeExists);
//           placeId = placeExists.placeId;
//           console.log(`Place exists with ID: ${placeId}`);
//       } else {
//           console.log("Place does not exist, checking city and country...");

//           // 2️⃣ בדיקת קיום המדינה
//           let countryId: number | null = null;
//           try {
//               const countryResponse = await axios.get(`https://localhost:7083/api/Country`, {
//                   params: { countryName: form.countryName }
//               });
//               countryId = countryResponse.data.countryId;
//               console.log(`Country exists with ID: ${countryId}`);
//           } catch (error) {
//               if (axios.isAxiosError(error) && error.response?.status === 404) {
//                   console.log("Country does not exist, creating new country...");
//                   const countryData = { CountryName: form.countryName, CountryCode: form.countryName.substring(0, 3).toUpperCase() };
//                   const newCountryResponse = await axios.post('https://localhost:7083/api/Country', countryData, {
//                       headers: { Authorization: `Bearer ${token}` }
//                   });
//                   countryId = newCountryResponse.data.countryId;
//                   console.log(`New country created with ID: ${countryId}`);
//               } else {
//                   throw error;
//               }
//           }

//           // 3️⃣ בדיקת קיום העיר
//           let cityId: number | null = null;
//           try {
//               const cityResponse = await axios.get(`https://localhost:7083/api/City`, {
//                   params: { cityName: form.cityName, countryId }
//               });
//               cityId = cityResponse.data.id;
//               console.log(`City exists with ID: ${cityId}`);
//           } catch (error) {
//               if (axios.isAxiosError(error) && error.response?.status === 404) {
//                   console.log("City does not exist, creating new city...");
//                   const cityData = { Name: form.cityName, CountryId: countryId };
//                   const newCityResponse = await axios.post('https://localhost:7083/api/City', cityData, {
//                       headers: { Authorization: `Bearer ${token}` }
//                   });
//                   cityId = newCityResponse.data.id;
//                   console.log(`New city created with ID: ${cityId}`);
//               } else {
//                   throw error;
//               }
//           }

//           // 4️⃣ יצירת מקום חדש
//           console.log("Creating new place...");
//           const placeData = {
//               PlaceName: form.placeName,
//               CategoryId: form.categoryId,
//               CityId: cityId,
//               Latitude: form.latitude,
//               Longitude: form.longitude
//           };
//           const placeResponse = await axios.post('https://localhost:7083/api/Place', placeData, {
//               headers: { Authorization: `Bearer ${token}` }
//           });
//           placeId = placeResponse.data.placeId;
//           console.log(`New place created with ID: ${placeId}`);
//       }

//       // 5️⃣ יצירת המלצה חדשה
//       const recommendationData = new FormData();
//       recommendationData.append('RecoId', '0');
//       recommendationData.append('UserId', user.user?.id?.toString() || '');
//       recommendationData.append('PlaceId', placeId?.toString() || '');
//       recommendationData.append('Title', form.title);
//       recommendationData.append('Description', form.description);
//       recommendationData.append('Likes', '0');
//       recommendationData.append('Dislikes', '0');
//       form.files.forEach(file => recommendationData.append('Files', file));

//       console.log("Submitting recommendation...");
//       await axios.post('https://localhost:7083/api/Recommendation', recommendationData, {
//           headers: {
//               'Content-Type': 'multipart/form-data',
//               Authorization: `Bearer ${token}`,
//           },
//       });

//       console.log("Recommendation submitted successfully!");
//       dispatch(clearForm());
//   } catch (error) {
//       console.error("Error in handleSubmit:", error);
//   }
// };


// if (loadError) return <div>Error loading maps</div>;
// if (!isLoaded) return <div>Loading Maps...</div>;


//   return (
//     <div className="container">
//       <h2>העלאת המלצה חדשה</h2>
//       <form onSubmit={handleSubmit}>
//         {/* חיפוש מקום בגוגל מפות */}
//         <GooglePlacesAutocomplete
//           apiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
//           selectProps={{
//             value: selectedPlace,
//             onChange: handlePlaceSelect,
//             placeholder: 'חפש או הוסף מקום',
//           }}
//         />

//         {/* מפה אינטראקטיבית - לחיצה על המפה תקבע מיקום */}

//         {isLoaded && (
//          <GooglePlacesAutocomplete
//          apiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}
//          selectProps={{
//            value: searchValue,
//            onChange: (newValue: any, actionMeta: any) => debouncedSetSearchValue(newValue),
//            placeholder: 'חפש או הוסף מקום',
//          }}
//        />
//         )}




//         <select value={form.categoryId || ''} onChange={e => dispatch(setCategoryId(Number(e.target.value)))} required>
//           <option value="">בחר קטגוריה</option>
//           {categories.map(cat => (
//             <option key={cat.categoryId} value={cat.categoryId}>{cat.name}</option>
//           ))}
//         </select>

//         <input type="text" placeholder="כותרת ההמלצה" value={form.title} onChange={e => dispatch(setTitle(e.target.value))} required />
//         <textarea placeholder="תיאור מפורט" value={form.description} onChange={e => dispatch(setDescription(e.target.value))} required />
//         <input type="file" onChange={e => dispatch(addFile(e.target.files![0]))} required />
//         <button type="submit">שלח המלצה</button>
//       </form>
//     </div>
//   );
// };

// export default AddRecommendation;